{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Lauri/WebstormProjects/action-verite-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/game.service\";\nimport * as i2 from \"../../services/cards.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ionic/angular\";\nfunction GamePage_div_5_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" \\u26A0\\uFE0F Apr\\u00E8s 3 v\\u00E9rit\\u00E9s cons\\u00E9cutives, vous devez faire une action ! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GamePage_div_5_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"ion-button\", 11);\n    i0.ɵɵlistener(\"click\", function GamePage_div_5_div_7_Template_ion_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.chooseType(\"v\\u00E9rit\\u00E9\"));\n    });\n    i0.ɵɵelement(2, \"ion-icon\", 12);\n    i0.ɵɵtext(3, \" V\\u00E9rit\\u00E9 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-button\", 13);\n    i0.ɵɵlistener(\"click\", function GamePage_div_5_div_7_Template_ion_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.chooseType(\"action\"));\n    });\n    i0.ɵɵelement(5, \"ion-icon\", 14);\n    i0.ɵɵtext(6, \" Action \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.canChooseTruth());\n  }\n}\nfunction GamePage_div_5_div_8_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelement(1, \"ion-icon\", 21);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.timerValue, \"s\");\n  }\n}\nfunction GamePage_div_5_div_8_ion_chip_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-chip\", 22);\n    i0.ɵɵelement(1, \"ion-icon\", 23);\n    i0.ɵɵelementStart(2, \"ion-label\");\n    i0.ɵɵtext(3, \"Photo obligatoire\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction GamePage_div_5_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"ion-card\")(2, \"ion-card-header\")(3, \"ion-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-card-content\")(6, \"p\", 16);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, GamePage_div_5_div_8_div_8_Template, 4, 1, \"div\", 17)(9, GamePage_div_5_div_8_ion_chip_9_Template, 4, 0, \"ion-chip\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"ion-button\", 19);\n    i0.ɵɵlistener(\"click\", function GamePage_div_5_div_8_Template_ion_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.nextPlayer());\n    });\n    i0.ɵɵtext(11, \" Prochain joueur \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.currentCard.type === \"v\\u00E9rit\\u00E9\" ? \"V\\u00C9RIT\\u00C9\" : \"ACTION\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.getFormattedDescription());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasTimer);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.currentCard.photoObligatoire);\n  }\n}\nfunction GamePage_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"h2\");\n    i0.ɵɵtext(3, \"Au tour de :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h1\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, GamePage_div_5_div_6_Template, 2, 0, \"div\", 6)(7, GamePage_div_5_div_7_Template, 7, 1, \"div\", 7)(8, GamePage_div_5_div_8_Template, 12, 4, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.currentPlayer.pseudo, \" !\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.canChooseTruth());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isCardVisible);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isCardVisible && ctx_r1.currentCard);\n  }\n}\nexport let GamePage = /*#__PURE__*/(() => {\n  class GamePage {\n    constructor(gameService, cardsService, router) {\n      this.gameService = gameService;\n      this.cardsService = cardsService;\n      this.router = router;\n      this.currentPlayer = null;\n      this.currentCard = null;\n      this.isCardVisible = false;\n      this.hasTimer = false;\n      this.timerValue = 0;\n    }\n    ngOnInit() {\n      this.loadGame();\n    }\n    loadGame() {\n      this.currentPlayer = this.gameService.getCurrentPlayer();\n      if (!this.currentPlayer) {\n        this.router.navigate(['/home']);\n      }\n    }\n    chooseType(type) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        // Vérifie si on peut choisir vérité\n        if (type === 'vérité' && !_this.gameService.canChooseTruth()) {\n          return;\n        }\n        _this.isCardVisible = false;\n        const card = yield _this.gameService.drawCard(type);\n        if (!card) {\n          alert('Aucune carte disponible');\n          return;\n        }\n        _this.currentCard = card;\n        _this.isCardVisible = true;\n        // Si la carte a un timer, on le démarre\n        if (card.timer) {\n          _this.startTimer(card.timer);\n        }\n      })();\n    }\n    startTimer(duration) {\n      this.hasTimer = true;\n      this.timerValue = duration;\n      this.timerInterval = setInterval(() => {\n        this.timerValue--;\n        if (this.timerValue <= 0) {\n          clearInterval(this.timerInterval);\n          this.hasTimer = false;\n          this.vibrate();\n          alert('Temps écoulé !');\n        }\n      }, 1000);\n    }\n    vibrate() {\n      return _asyncToGenerator(function* () {\n        try {\n          yield Haptics.impact({\n            style: ImpactStyle.Medium\n          });\n        } catch (e) {\n          console.log('Haptics non disponibles');\n        }\n      })();\n    }\n    nextPlayer() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        if (_this2.timerInterval) {\n          clearInterval(_this2.timerInterval);\n        }\n        yield _this2.gameService.nextPlayer();\n        _this2.isCardVisible = false;\n        _this2.currentCard = null;\n        _this2.loadGame();\n      })();\n    }\n    getConsecutiveTruths() {\n      return this.gameService.getConsecutiveTruths();\n    }\n    canChooseTruth() {\n      return this.gameService.canChooseTruth();\n    }\n    getFormattedDescription() {\n      if (!this.currentCard || !this.currentPlayer) return '';\n      // Récupère tous les autres joueurs depuis le GameService\n      const otherPlayers = this.gameService.getOtherPlayers();\n      // Utilise la méthode du service pour remplacer les variables\n      return this.cardsService.replaceVariables(this.currentCard, this.currentPlayer, otherPlayers);\n    }\n    static {\n      this.ɵfac = function GamePage_Factory(t) {\n        return new (t || GamePage)(i0.ɵɵdirectiveInject(i1.GameService), i0.ɵɵdirectiveInject(i2.CardsService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: GamePage,\n        selectors: [[\"app-game\"]],\n        decls: 6,\n        vars: 3,\n        consts: [[3, \"translucent\"], [\"color\", \"primary\"], [1, \"ion-padding\", 3, \"fullscreen\"], [\"class\", \"content\", 4, \"ngIf\"], [1, \"content\"], [1, \"current-player\"], [\"class\", \"warning-message\", 4, \"ngIf\"], [\"class\", \"choice-buttons\", 4, \"ngIf\"], [\"class\", \"card-container\", 4, \"ngIf\"], [1, \"warning-message\"], [1, \"choice-buttons\"], [\"expand\", \"block\", \"size\", \"large\", \"color\", \"danger\", 3, \"click\", \"disabled\"], [\"slot\", \"start\", \"name\", \"help-circle\"], [\"expand\", \"block\", \"size\", \"large\", \"color\", \"primary\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"flash\"], [1, \"card-container\"], [1, \"card-description\"], [\"class\", \"timer\", 4, \"ngIf\"], [\"color\", \"warning\", 4, \"ngIf\"], [\"expand\", \"block\", 3, \"click\"], [1, \"timer\"], [\"name\", \"time\"], [\"color\", \"warning\"], [\"name\", \"camera\"]],\n        template: function GamePage_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\", 1)(2, \"ion-title\");\n            i0.ɵɵtext(3, \"Partie en cours\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(4, \"ion-content\", 2);\n            i0.ɵɵtemplate(5, GamePage_div_5_Template, 9, 4, \"div\", 3);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"translucent\", true);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"fullscreen\", true);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.currentPlayer);\n          }\n        },\n        dependencies: [i4.NgIf, i5.IonButton, i5.IonCard, i5.IonCardContent, i5.IonCardHeader, i5.IonCardTitle, i5.IonChip, i5.IonContent, i5.IonHeader, i5.IonIcon, i5.IonLabel, i5.IonTitle, i5.IonToolbar],\n        styles: [\".content[_ngcontent-%COMP%]{max-width:600px;margin:0 auto;padding:20px;min-height:100vh;background:#ffe100}.current-player[_ngcontent-%COMP%]{text-align:center;margin:60px 0 40px}.current-player[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:48px;font-weight:700;color:#9d2aa7;margin:0;line-height:1}.current-player[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:24px;color:#9d2aa7;margin:0;font-weight:700}.current-player[_ngcontent-%COMP%]   .genre[_ngcontent-%COMP%]{font-size:18px;color:#9d2aa7b3;margin-top:10px}.choice-buttons[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:25px;margin-top:40px}.choice-buttons[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%]{height:80px;font-size:28px;font-weight:700;color:#9d2aa7;border-radius:20px;box-shadow:0 8px 20px #0000004d;background:linear-gradient(90deg,#00b0ff,#9d2aa7)}.choice-buttons[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{font-size:32px;margin-right:10px}.choice-buttons[_ngcontent-%COMP%]   ion-button.ion-color-danger[_ngcontent-%COMP%]{--background: linear-gradient(90deg, #00B0FF 0%, #9D2AA7 100%);--color: white}.choice-buttons[_ngcontent-%COMP%]   ion-button.ion-color-primary[_ngcontent-%COMP%]{--background: linear-gradient(90deg, #9D2AA7 0%, #EC4899 100%);--color: white}.choice-buttons[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%]:disabled{opacity:.4}.card-container[_ngcontent-%COMP%]{margin-top:30px}ion-card[_ngcontent-%COMP%]{border-radius:25px;overflow:hidden}ion-card-header[_ngcontent-%COMP%]{background:linear-gradient(135deg,#9d2aa7,#ec4899);color:#fff;padding:20px}ion-card-title[_ngcontent-%COMP%]{color:#fff;font-size:32px;font-weight:700;text-align:center}.card-description[_ngcontent-%COMP%]{font-size:24px;text-align:center;margin:30px 0;color:#9d2aa7;font-weight:700}.timer[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;gap:10px;font-size:48px;color:#ec4899;margin:20px 0;font-weight:700}.timer[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{font-size:40px}ion-chip[_ngcontent-%COMP%]{margin-top:20px}.warning-message[_ngcontent-%COMP%]{background:#fffffff2;padding:15px;border-radius:15px;margin:20px 0;font-weight:700;color:#ec4899;text-align:center;box-shadow:0 4px 15px #0003}\"]\n      });\n    }\n  }\n  return GamePage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}